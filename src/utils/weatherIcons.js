/**
 * Weather Icons Utility
 * Maps common weather conditions to Unicode weather symbols
 */

// Map of weather conditions to their corresponding Unicode weather icons
const weatherIconMap = {
  // Clear conditions
  'Clear': '‚òÄÔ∏è',
  'Sunny': '‚òÄÔ∏è',
  'Mostly Clear': 'üå§Ô∏è',
  'Mostly Sunny': 'üå§Ô∏è',
  
  // Cloudy conditions
  'Partly Cloudy': '‚õÖ',
  'Mostly Cloudy': 'üå•Ô∏è',
  'Cloudy': '‚òÅÔ∏è',
  'Overcast': '‚òÅÔ∏è',
  
  // Rain conditions
  'Drizzle': 'üå¶Ô∏è',
  'Light Rain': 'üå¶Ô∏è',
  'Rain': 'üåßÔ∏è',
  'Heavy Rain': 'üåßÔ∏è',
  'Showers': 'üåßÔ∏è',
  'Thunderstorm': '‚õàÔ∏è',
  'Thundershowers': '‚õàÔ∏è',
  'Storm': '‚õàÔ∏è',
  
  // Snow conditions
  'Light Snow': 'üå®Ô∏è',
  'Snow': '‚ùÑÔ∏è',
  'Heavy Snow': '‚ùÑÔ∏è',
  'Sleet': 'üå®Ô∏è',
  'Freezing Rain': 'üå®Ô∏è',
  'Blizzard': '‚ùÑÔ∏è',
  
  // Fog/Mist conditions
  'Fog': 'üå´Ô∏è',
  'Mist': 'üå´Ô∏è',
  'Hazy': 'üå´Ô∏è',
  
  // Special conditions
  'Windy': 'üí®',
  'Tornado': 'üå™Ô∏è',
  'Hurricane': 'üåÄ',
  'Dust': 'üí®',
  'Smoke': 'üå´Ô∏è',
  'Hail': 'üå®Ô∏è'
};

/**
 * Get the weather icon for a given condition
 * @param {string} condition - The weather condition
 * @returns {string} - The Unicode weather icon
 */
export const getWeatherIcon = (condition) => {
  if (!condition) return '‚ùì'; // Default for unknown condition
  
  // Try to match the condition exactly
  if (weatherIconMap[condition]) {
    return weatherIconMap[condition];
  }
  
  // If no exact match, try partial match (e.g. 'Heavy Thunderstorms' should match 'Thunderstorm')
  const conditionLower = condition.toLowerCase();
  
  if (conditionLower.includes('thunder')) return weatherIconMap['Thunderstorm'];
  if (conditionLower.includes('rain')) return weatherIconMap['Rain'];
  if (conditionLower.includes('shower')) return weatherIconMap['Showers'];
  if (conditionLower.includes('snow')) return weatherIconMap['Snow'];
  if (conditionLower.includes('cloud')) return weatherIconMap['Cloudy'];
  if (conditionLower.includes('clear') || conditionLower.includes('sunny')) return weatherIconMap['Clear'];
  if (conditionLower.includes('fog') || conditionLower.includes('mist') || conditionLower.includes('haz')) return weatherIconMap['Fog'];
  
  // Default icon if no matching condition
  return 'üå°Ô∏è';
};

export default getWeatherIcon; 